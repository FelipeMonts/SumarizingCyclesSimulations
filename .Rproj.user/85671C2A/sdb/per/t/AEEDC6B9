{
    "collab_server" : "",
    "contents" : "\n##############################################################################################################################\n#\n#  Program to extract and summarize outputs from N2O Rose Simulations by Dr. Debasish Saha.\n#\n#  Felipe Montes,  2016/05/03\n#\n##############################################################################################################################\n\n\n\n\n\n\n###############################################################################################################\n#                          Loading Packages and setting up working directory                        \n###############################################################################################################\n\n\n\n#  Tell the program where the package libraries are  #####################\n\n\n.libPaths(\"C:/Felipe/R_Library/library\")\n\n#  Set Working directory\n\nsetwd(\"C:\\\\Felipe\\\\OrganicTransitions_N2OROSE\\\\CyclesSimulation\\\\SahaN2ORoseSimulations\\\\SimulationFolders\");\n\n\n#  Inlcude the necesary packages\n\nlibrary(lattice); \n\noptions(java.parameters = \"-Xmx4g\" ); \n\n#  options(java.parameters = \"-Xmx1024m\" );\n\nlibrary(XLConnect);\n\n\n# Get the names of the files in the working directory\n\nFileNames<-list.files() ;\n\n\n# Create a directoty to summarize the outputs\n\ndir.create(\"..\\\\OutputSummary\");  \n\n\n\n\n\n\n###############################################################################################################\n#                          Code to extract excell columns by letter name                                  \n###############################################################################################################\n\n\n# Line of codes to convert exell column names to column numbers to easy extraction in R\n\nExcel.Columns<-c(LETTERS, paste0(\"A\",LETTERS),paste0(\"B\",LETTERS),paste0(\"C\",LETTERS));\n\n\n\n###############################################################################################################\n#                         Conversion of from Si to pounds per acre and bushels per acre             \n###############################################################################################################\n\n\n# Converting outputs to pounds per acre and bushels per acre\n\n\n# Based on the conversion tool in the Iowa State University Extension and Outreach Ag Decision Maker website\n# http://www.extension.iastate.edu/agdm/wholefarm/html/c6-80.html\n     \n     Mg_ha_to_Bushels_ac=1000*2.205/(56*2.471)\n     Mg_ha_to_lb_ac=1000*2.205/2.471\n     kg_ha_to_lb_ac=2.205/2.471\n\n\n\n###############################################################################################################\n#                          Starting Season Outputs data query                                   \n###############################################################################################################\n\n# Column numbers from the season soutput that are to be kept for data extraction\n\nColumnsSeason<-which(Excel.Columns %in% c(\"B\", \"C\" , \"F\" , \"G\" ,\"H\", \"J\" , \"K\", \"M\" , \"N\" , \"O\" , \"P\", \"Q\"))-1;\n\n\n#  Reading Column headers \n\n\nSeasonOutput.header<-readWorksheetFromFile(FileNames[1], sheet = \"Season Output\", startRow = 3, endRow=5, header=F,keep=ColumnsSeason);\n\n# Composing and saving the season ouptput column names\n\n\nSeasonColNames<-paste(SeasonOutput.header[1,],SeasonOutput.header[2,],SeasonOutput.header[3,],sep=\"_\") ;\n\n#  Reading data columns in each file of contained in the simulations directory\n\n\n#  Create a storing file to accumulate the data of the files after processing\n\nSeasonOutput.summary<-data.frame()  ;\n\n\n\nfor (i in FileNames) {\n     # i=FileNames[1]\n     \n     #  Read data columns of in the season output of the simulation ouput spreadsheet\n     \n     \n     SeasonOutput<-readWorksheetFromFile(i, sheet = \"Season Output\", startRow = 6,header=F,keep=ColumnsSeason); \n\n     # Naming the data columns read\n\n\n     names(SeasonOutput)<-SeasonColNames\n\n\n\n     #   Extracting Maize Rows and the row above\n\n     MaizeRows<-which(SeasonOutput$NA_NA_Crop ==c(\"Maize\")) ;\n\n\n     Corn<-SeasonOutput[c(MaizeRows,MaizeRows-1),]  ;\n     \n\n     \n     # Adding the Water strees indicator based in potential and realized evapotranspiration\n     # The Water Stress or water deficit indicator will be calculated as: 1-[Actual_Transpiration_mm / Potential_Transpiration_mm ]\n     \n     Corn$WaterDeficit<-1 - (Corn$Actual_Transpiration_mm / Corn$Potential_Transpiration_mm)    ;\n\n     \n    # Adding the file name to the column File\n     \n     Corn$File<-i\n     \n\n    #  Sorting the data according to Harvest date\n\n     Corn<-Corn[do.call(order,Corn),] ;\n     \n    # Write the results into the storing file\n\n    SeasonOutput.summary<-rbind(SeasonOutput.summary,Corn)    ;   \n\n    # Remove the data to create space in memory\n     \n    rm(SeasonOutput)  ; \n     \n    gc() ;\n     \n}\n\n\n# Writting the results to the summary spreadsheet\n\n\nwriteWorksheetToFile(\"..\\\\OutputSummary\\\\CyclesOutputSummary.xlsx\", SeasonOutput.summary, sheet=\"Season_Output\")  ;\n\n\n\n###########Converting Outputs from SI to Bushels, Pounds, Acre     \n\n     \n# Selecting the columns that need to be converted to pounds per acre \n     \nCol.LbAc<-grepl(\"Mg/ha\",names(SeasonOutput.summary)) & ! grepl(\"Grain_Yield\",names(SeasonOutput.summary)); \n\n# Converting the data from Mg/ha to lb,Ac\n\nSeasonOutput.summary.LbAc<-SeasonOutput.summary[,Col.LbAc]*Mg_ha_to_lb_ac ;\n\n# Changing the names of the columns\n\nnames(SeasonOutput.summary.LbAc)<-sub(\"Mg/ha\",\"lb_Ac\",names(SeasonOutput.summary.LbAc))  ;\n     \n\n     \n# Selecting the columns that need to be converted to bushels per acre   \n\nCol.BuAc<-grepl(\"Grain_Yield\",names(SeasonOutput.summary))  ; \n\n# Converting the data from Mg/ha to Bu,Ac\n\nSeasonOutput.summary.BuAc<-data.frame(SeasonOutput.summary[,Col.BuAc]*Mg_ha_to_Bushels_ac)  ; \n\n# Changing the names of the columns\n\nnames(SeasonOutput.summary.BuAc)<-\"Grain_Yield_Bushels_Ac\" ;\n\n\n# Putting all the columns back together\n\n\nSeasonOutput.summary.LbBuAc<-data.frame(SeasonOutput.summary[,!(Col.LbAc | Col.BuAc)],SeasonOutput.summary.BuAc,SeasonOutput.summary.LbAc);\n\n# Writing the  data to the spreadsheet\n\nwriteWorksheetToFile(\"..\\\\OutputSummary\\\\CyclesOutputSummary.xlsx\", SeasonOutput.summary.LbBuAc, sheet=\"Season_OutputLbBuAc\")  ;\n\n\n\n#  Remove objects to free memory space\n\nrm(list=ls()[!ls() %in%  c(\"Excel.Columns\",\"FileNames\",\"Mg_ha_to_Bushels_ac\",\"Mg_ha_to_lb_ac\",\"kg_ha_to_lb_ac\") ])  ;\n\n\ngc(verbose=T);\n\n\n\n###############################################################################################################\n#                          Starting Daily outputs data query                                   \n###############################################################################################################\n\n# Column numbers from the daily output that are to be kept for data extraction\n\n\nColumnsDaily<-which(Excel.Columns %in% c(\"A\",\"B\",\"G\",\"H\",\"N\",\"U\",\"V\",\"AT\",\"AU\",\"AX\",\"AZ\",\"BA\",\"BC\",\"BD\",\"BG\",\"BI\",\"BJ\"));\n\n\n\n#  Reading Column headers \n\nDailyOutput.header<-readWorksheetFromFile(FileNames[1], sheet = \"Daily Outputs\", startRow = 3, endRow=7, header=F, keep=ColumnsDaily);\n\n\n# Composing and saving the daily ouptput column names\n\n\nDailyColNames<-c(paste(DailyOutput.header[2,],DailyOutput.header[3,],DailyOutput.header[4,],DailyOutput.header[5,],sep=\"_\"))   ;\n\n\n#  Create a storing file to accumulate the data of the files after processing\n\nDaily.summary<-data.frame()  ;\n\n\n\nfor (j in FileNames) {\n\n     # j=FileNames[1]\n     #  Read data columns of in the daily output of the simulation ouput spreadsheet\n     \n     \n     DailyOutput<-readWorksheetFromFile(j, sheet = \"Daily Outputs\", startRow= 8, header=F, keep=ColumnsDaily); \n\n\n     # Naming the data columns read\n\n\n     names(DailyOutput)<-DailyColNames  ;\n\n\n     DailyOutput$Year<-as.factor(format(DailyOutput$NA_NA_NA_Date,format=\"%Y\"));\n\n     \n     #   Selecting Maize rows in the outputs\n\n     Maize.Rows<-DailyOutput[DailyOutput$`NA_Rotation_Stage_Crop Name` == c(\"Maize\"),];\n\n     #   Selecting Mineral N at corn planting\n\n     Maize.Planting<-Maize.Rows[Maize.Rows$NA_Crop_Growth_Stage == c(\"Planting\"), ];\n\n     Maize.Planting$MineralN<-Maize.Planting$\"Profile_Soil_Nitrate_kg N/ha\" + Maize.Planting$\"Profile_Soil_Ammonium_kg N/ha\";\n\n     #   Calculating Net Mineralization in Corn\n\n     `Maize.NMineralization_kg_ha`<-tapply(Maize.Rows$\"Nitrogen_Net_Mineralization_kg N/ha\",Maize.Rows$Year,sum);\n\n\n     #   Nitrogen leaching during corn planting\n\n    `Maize.N_Leaching_kg_ha`<-tapply(Maize.Rows$\"NA_Nitrate_Leaching_kg N/ha\",Maize.Rows$Year,sum);\n\n    `Maize.NH4_N_Volatilization_kg_ha`<-tapply(Maize.Rows$\"NA_Ammonia_Volatilization_kg N/ha\",Maize.Rows$Year,sum);\n\n    `Maize.N2O_N_Denitification_kg_ha`<-tapply(Maize.Rows$\"Nitrous Oxide_from_Denitrification_kg N/ha\",Maize.Rows$Year,sum);\n     \n    `Maize.N2O_Nitrification_kg_ha`<-tapply(Maize.Rows$\"Nitrous Oxide_from_Nitrification_kg N/ha\",Maize.Rows$Year,sum);\n\n    `Maize.N_GaseousLosses_kg_ha`<-`Maize.NH4_N_Volatilization_kg_ha` + `Maize.NH4_N_Volatilization_kg_ha` + `Maize.N2O_Nitrification_kg_ha`;\n\n     #  Soil Health During Corn\n\n    `Maize.SoilOC.planting_Mg_ha`<-tapply(Maize.Rows$`Soil_Organic_Carbon_Mg/ha`,Maize.Rows$Year,max);\n     \n    `Maize.Residue.C_Resp_Mg_ha`<-tapply(Maize.Rows$\"Residue_Respired_Carbon_Mg/ha\",Maize.Rows$Year,sum);\n     \n    `Maize.SOM.C_Resp_Mg_ha`<-tapply(Maize.Rows$\"SOM_Respired_Carbon_Mg/ha\",Maize.Rows$Year,sum);\n     \n     # Grouping the data\n    \n     \n     DailyOutput.Maize.1<-data.frame(`Maize.NMineralization_kg_ha` , `Maize.N_Leaching_kg_ha` , `Maize.NH4_N_Volatilization_kg_ha` , `Maize.N2O_N_Denitification_kg_ha`, `Maize.N2O_Nitrification_kg_ha` , `Maize.N_GaseousLosses_kg_ha` , `Maize.SoilOC.planting_Mg_ha`, `Maize.Residue.C_Resp_Mg_ha`, `Maize.SOM.C_Resp_Mg_ha`)   ;\n     \n     # Adding Year to the grouping ot merge the rest of the data\n     \n     DailyOutput.Maize.1$Year<-as.factor(row.names(DailyOutput.Maize.1))  ;   \n     \n     \n\n     # Maize rows at the last day corn was grown in each year\n     \n     Maize.Rows.LastDay<-tapply(Maize.Rows$NA_NA_NA_Day,Maize.Rows$Year,max) ;\n     \n     Year<-as.factor(row.names(Maize.Rows.LastDay)) ;\n     \n     Maize.Data<-data.frame(Maize.Rows.LastDay, Year) ;\n     \n     names(Maize.Data)<-c(\"NA_NA_NA_Day\",\"Year\")   ;\n     \n     Maize.LastDay.year<-merge(Maize.Data, Maize.Rows) ;\n\n\n     # Selectimg the Soil Organic carbon during the last day corn is growing in each year\n\n     `Maize.SoilOC.Maturiy_Mg_ha`<-Maize.LastDay.year[,c(\"Year\",\"Soil_Organic_Carbon_Mg/ha\")]; \n     \n     names(`Maize.SoilOC.Maturiy_Mg_ha`)<-c(\"Year\",\"Maize.Soil_Organic_Carbon_Mg_ha\")   ;\n     \n     # Merge Maize.SoilOC.Maturiy with the rest of the data\n     \n     DailyOutput.Maize<-merge(DailyOutput.Maize.1,`Maize.SoilOC.Maturiy_Mg_ha`, by=\"Year\",all=T);\n     \n\n     \n     #   Extracting Nitrogen available in  Red Clover and Alfalfa cover crops before Maize; \n\n     #   Selecting Red Clover rows in the outputs\n\n     RedClover.Rows<-DailyOutput[DailyOutput$`NA_Rotation_Stage_Crop Name` == c(\"Red Clover\"),];\n\n\n     # Selecting the last day of the year that RecClover was grown \n     \n     RedClover.LastDay<-tapply(RedClover.Rows$NA_NA_NA_Day,RedClover.Rows$Year,max) ;\n     \n     Year.RedClover<-as.factor(row.names(RedClover.LastDay))  ;\n     \n     RedClover.Data<-data.frame(RedClover.LastDay, Year.RedClover,row.names = NULL) ;\n     \n     names(RedClover.Data)<-c(\"NA_NA_NA_Day\",\"Year\")   ;\n     \n     #select the rows of RedClover with the last day of RedClover in each year\n     \n     RedClover.LastDay.year<-merge(RedClover.Data, RedClover.Rows) ;\n     \n     # Selecting the Total Crop N for the last day of RedClover before corn\n\n     `RedClover.TotalCropN_kg/ha`<-RedClover.LastDay.year[,c(\"Year\",\"NA_NA_NA_Day\",\"Total_Crop_Nitrogen_kg N/ha\")] ;\n     \n     names(`RedClover.TotalCropN_kg/ha`)<-c(\"Year\",\"NA_NA_NA_Day\",\"RedClover_Total_Crop_Nitrogen_kg_ha\")  ;\n     \n     \n      #   Selecting the maximum total crop N of red clover cover by year\n\n     RedClover.TotalCropN.1<-tapply(RedClover.Rows$`Total_Crop_Nitrogen_kg N/ha`,RedClover.Rows$Year,max);\n     \n     \n      #   Selecting Alfalfa rows in the outputs\n\n     Alfalfa.Rows<-DailyOutput[DailyOutput$`NA_Rotation_Stage_Crop Name`== c(\"Alfalfa\"),];\n\n\n     #   Selecting the maximum total crop N of alfalfa by year \n     \n     # Selecting the las day of the year that afalfa was grown \n     \n     Alfalfa.LastDay<-tapply(Alfalfa.Rows$NA_NA_NA_Day,Alfalfa.Rows$Year,max) ;\n     \n     Year<-as.factor(row.names(Alfalfa.LastDay))  ;\n     \n     Alfalfa.Data<-data.frame(Alfalfa.LastDay, Year,row.names = NULL) ;\n     \n     names(Alfalfa.Data)<-c(\"NA_NA_NA_Day\",\"Year\")   ;\n     \n\n     #select the rows of alfalfa with the last day of alafalfa in each year\n     \n     Alfalfa.LastDay.year<-merge(Alfalfa.Data, Alfalfa.Rows) ;\n     \n     \n     # Selecting the Total Crop N for the last day of alfalfa before corn\n\n     `Alfalfa.TotalCropN_kg/ha`<-Alfalfa.LastDay.year[,c(\"Year\",\"NA_NA_NA_Day\",\"Total_Crop_Nitrogen_kg N/ha\")] ;\n     \n     names(`Alfalfa.TotalCropN_kg/ha`)<-c(\"Year\",\"NA_NA_NA_Day\",\"Alfalfa_Total_Crop_Nitrogen_kg_ha\")\n\n     # Merge data from Alfalfa and RedClover\n     \n     Alfalfa.RedClover.summary<-merge(`Alfalfa.TotalCropN_kg/ha`,`RedClover.TotalCropN_kg/ha`, by=\"Year\", all=T) ;\n     \n     # Merge data from Corn, Alfalfa and RedClover\n     \n     DailyOutput.Summary<-merge(DailyOutput.Maize,Alfalfa.RedClover.summary, by=\"Year\", all=T) ;\n     \n     \n     #   Adding the file name to keep track\n\n     Original.File<-j ;\n\n     DailyOutput.Summary$File<-Original.File ;\n\n     # Sumarizing the results:\n\n         # Write the results into the storing file\n\n    Daily.summary<-rbind(Daily.summary,DailyOutput.Summary)    ;   \n\n    # Remove the data to create space in memory\n     \n     \n     rm(DailyOutput) ;\n     \n     gc() ;\n     \n}\n\n\n\n# Writting the results to the summary spreadsheet\n\nwriteWorksheetToFile(\"..\\\\OutputSummary\\\\CyclesOutputSummary.xlsx\", Daily.summary , sheet=\"Daily_Output\")  ;\n\n\n\n###########Converting Outputs from SI to Bushels, Pounds, Acre     \n\n\n# Selecting the columns that need to be converted from Mg/ha to pounds per acre \n     \nColMgha.LbAc<-grepl(\"Mg_ha\",names(Daily.summary)) ; \n\n# Converting the data from Mg/ha to lb,Ac\n\nDaily.summary.MghaLbAc<-data.frame(Daily.summary[,ColMgha.LbAc]*Mg_ha_to_lb_ac);\n\n# Changing the names of the columns\n\nnames(Daily.summary.MghaLbAc)<-sub(\"Mg_ha\",\"lb_Ac\",names(Daily.summary.MghaLbAc))  ;\n\n\n# Selecting the columns that need to be converted from Kg/ha to pounds per acre \n     \nColkgha.LbAc<-grepl(\"kg_ha\",names(Daily.summary)) ;\n\n# Converting the data from Kg/ha to lb,Ac\n\nDaily.summary.kghaLbAc<-data.frame(Daily.summary[,Colkgha.LbAc]*kg_ha_to_lb_ac);\n\n# Changing the names of the columns\n\nnames(Daily.summary.kghaLbAc)<-sub(\"kg_ha\",\"lb_Ac\",names(Daily.summary.kghaLbAc))  ;\n\n# Putting all the columns back together\n\nDaily.summary.LbBuAc<-data.frame(Daily.summary[,!(ColMgha.LbAc | Colkgha.LbAc)],Daily.summary.MghaLbAc,Daily.summary.kghaLbAc)  ;\n\n\n# Writing the  data to the spreadsheet\n\nwriteWorksheetToFile(\"..\\\\OutputSummary\\\\CyclesOutputSummary.xlsx\", Daily.summary.LbBuAc, sheet=\"Daily_OutputLbBuAc\")  ;\n\n\n\n\n\n#  Remove objects to free memory space\n\nrm(list=ls()[!ls() %in%  c(\"Excel.Columns\",\"FileNames\",\"Mg_ha_to_Bushels_ac\",\"Mg_ha_to_lb_ac\",\"kg_ha_to_lb_ac\") ])  ;\n\n\ngc(verbose=T) ;\n\n\n###############################################################################################################\n#                          Starting Annual Soil Profile and Annual Outputs data  query                                   \n###############################################################################################################\n\n\n\n#  Reading Column headers for the Annual Soil Profile Data \n\n\nAnnualSoilProfile.1<-readWorksheetFromFile(FileNames[1], sheet = \"Annual Soil Profile\", startRow = 3, endRow=3, header=F, simplify=T);\n\n#  Creating Coulmn header for classes\n\nAnnualSoilProfile.classes<-as.factor(AnnualSoilProfile.1[!is.na(AnnualSoilProfile.1)] )  ;\n\n\n#  Create a storing file to accumulate the data of the files after processing\n\nSoilProfile.summary<-data.frame()  ;\n\n\nfor (k in FileNames) {\n     \n     # k=FileNames[1]\n     \n     ###############################################################################################################\n     #                                 Annual Soil Profile                                \n     ###############################################################################################################\n\n     #  Creating Coulmn header for layers\n\n     AnnualSoilProfile.2<-readWorksheetFromFile(k, sheet = \"Annual Soil Profile\", startRow = 4, endRow=5, header=F);\n\n\n     AnnualSoilProfile.Layers<-AnnualSoilProfile.2[,!is.na(AnnualSoilProfile.2[2,])] ;\n     \n     #Pasting the colum layers with the data classes to make the full column headers, excluding the \"Year\" coulm header, the first column in the data      set\n\n     AnnualSoilProfile.Names<-paste(rep(AnnualSoilProfile.classes,each=(length(AnnualSoilProfile.Layers)-1)/length(levels(AnnualSoilProfile.classes))),AnnualSoilProfile.Layers[1,-1],AnnualSoilProfile.Layers[2,-1],sep=\"_\")  ;\n\n     # Reading the data from the spreadsheet\n\n     AnnualSoilProfile.3<-readWorksheetFromFile(k, sheet = \"Annual Soil Profile\", startRow = 6, header=F);\n\n     # Eliminting blank columns form the data set\n     AnnualSoilProfile.Data<-AnnualSoilProfile.3[,!is.na(AnnualSoilProfile.3[1,])];\n     \n     #Adding the full column names to the data set\n\n     names(AnnualSoilProfile.Data)<-c(\"Year\",AnnualSoilProfile.Names);\n     \n     # Calculating the Humidified carbon per year on the top four layers\n     \n     AnnualSoilProfile.Data$`HumidifiedC_25_Mg_C_ha`<-AnnualSoilProfile.Data[,c(\"Humified Carbon Mass_Layer 1_Mg C/ha\")] + AnnualSoilProfile.Data[,c(\"Humified Carbon Mass_Layer 2_Mg C/ha\")] + AnnualSoilProfile.Data[,c(\"Humified Carbon Mass_Layer 3_Mg C/ha\")] + AnnualSoilProfile.Data[,c(\"Humified Carbon Mass_Layer 4_Mg C/ha\")] ;\n     \n     \n     # Calculating the Initial soil carbon carbon per year on the top four layers\n     \n     AnnualSoilProfile.Data$`InitialC_25_Mg_C_ha`<-AnnualSoilProfile.Data[,c(\"Initial Carbon Mass_Layer 1_Mg C/ha\")] + AnnualSoilProfile.Data[,c(\"Initial Carbon Mass_Layer 2_Mg C/ha\")] + AnnualSoilProfile.Data[,c(\"Initial Carbon Mass_Layer 3_Mg C/ha\")] + AnnualSoilProfile.Data[,c(\"Initial Carbon Mass_Layer 4_Mg C/ha\")] ;\n     \n     \n     #  Calculating percent humidification per year in the top 4 layers\n     \n     AnnualSoilProfile.Data$HumidifiedC_25_percent<-AnnualSoilProfile.Data$HumidifiedC_25/AnnualSoilProfile.Data$InitialC_25  ;\n     \n     #  Adding the File Name \n     \n     Original.File<-k ;\n     \n     AnnualSoilProfile.Data$File<-Original.File   ;\n     \n     \n     # Write the results into the storing file\n\n      SoilProfile.summary<-rbind(SoilProfile.summary,AnnualSoilProfile.Data[,c( 'Year','HumidifiedC_25_Mg_C_ha', 'InitialC_25_Mg_C_ha', 'HumidifiedC_25_percent','File')])  ;   \n\n    rm( AnnualSoilProfile.2 , AnnualSoilProfile.3 , AnnualSoilProfile.Data ) ;\n      \n    gc() ;\n\n}\n\n\n# Writting the results to the summary spreadsheet\n\nwriteWorksheetToFile(\"..\\\\OutputSummary\\\\CyclesOutputSummary.xlsx\", SoilProfile.summary, sheet=\"Soil_Output\")  ;\n\n\n\n###########Converting Outputs from SI to Bushels, Pounds, Acre \n\n\n# Selecting the columns that need to be converted from Mg/ha to pounds per acre \n     \nSoilColMgCha.LbAc<-grepl(\"Mg_C_ha\",names(SoilProfile.summary)) ; \n\n\n# Converting the data from Mg/ha to lb,Ac\n\nSoilProfile.summary.LbAc<-data.frame(SoilProfile.summary[,SoilColMgCha.LbAc]*Mg_ha_to_lb_ac)  ;\n\n# Changing the names of the columns\n\n\nnames(SoilProfile.summary.LbAc)<-sub(\"Mg_C_ha\",\"lb_Ac\",names(SoilProfile.summary.LbAc))  ;\n\n\n\n\n# Putting all the columns back together\n\nSoilProfile.summary.LbAc<-data.frame(SoilProfile.summary[,!SoilColMgCha.LbAc],SoilProfile.summary.LbAc)  ;\n\n\n# Writing the  data to the spreadsheet\n\nwriteWorksheetToFile(\"..\\\\OutputSummary\\\\CyclesOutputSummary.xlsx\", SoilProfile.summary.LbAc, sheet=\"Soil_OutputLbBuAc\")  ;\n\n\n\n\n#  Remove objects to free memory space\n\nrm(list=ls()[!ls() %in%  c(\"Excel.Columns\",\"FileNames\",\"Mg_ha_to_Bushels_ac\",\"Mg_ha_to_lb_ac\",\"kg_ha_to_lb_ac\") ])  ;\n\n\ngc(verbose=T)   ;\n\n\n\n\n\n\n     \n",
    "created" : 1486155274857.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "640232532",
    "id" : "AEEDC6B9",
    "lastKnownWriteTime" : 1486155338,
    "last_content_update" : 1486155338744,
    "path" : "C:/Felipe/OrganicTransitions_N2OROSE/CyclesSimulation/SumarizingCyclesSimulations/SumarizingOutputsCyclesN2ORose.R",
    "project_path" : "SumarizingOutputsCyclesN2ORose.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}